{"Extensions/MMMPseudoRandomSequence.html#/nextInteger(in:)":{"name":"nextInteger(in:)","parent_name":"MMMPseudoRandomSequence"},"Extensions/MMMPseudoRandomSequence.html#/nextDouble(in:)":{"name":"nextDouble(in:)","parent_name":"MMMPseudoRandomSequence"},"Extensions/MMMPseudoRandomSequence.html#/randomElement(of:)":{"name":"randomElement(of:)","parent_name":"MMMPseudoRandomSequence"},"Extensions/MMMPseudoRandomSequence.html#/next()":{"name":"next()","parent_name":"MMMPseudoRandomSequence"},"Extensions/MMMHipsum.html#/words(count:processBlock:)":{"name":"words(count:processBlock:)","abstract":"<p>An array of words with number of words being in the specified range, with the optional block which is called on each word.</p>","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html#/titleCaseString(wordCount:)":{"name":"titleCaseString(wordCount:)","abstract":"<p>A title case string without any punctuation.</p>","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html#/sentenceFragment(wordCount:)":{"name":"sentenceFragment(wordCount:)","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html#/sentence(wordCount:)":{"name":"sentence(wordCount:)","abstract":"<p>A sentence with the word count within the given range.</p>","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html#/paragraph(sentenceCount:wordsPerSentence:)":{"name":"paragraph(sentenceCount:wordsPerSentence:)","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html#/text(paragraphCount:sentencesPerParagraph:wordsPerSentence:)":{"name":"text(paragraphCount:sentencesPerParagraph:wordsPerSentence:)","parent_name":"MMMHipsum"},"Extensions/MMMHipsum.html":{"name":"MMMHipsum"},"Extensions/MMMPseudoRandomSequence.html":{"name":"MMMPseudoRandomSequence"},"Classes/PseudoRandomSequence.html#/init(seed:)":{"name":"init(seed:)","parent_name":"PseudoRandomSequence"},"Classes/PseudoRandomSequence.html#/next()":{"name":"next()","parent_name":"PseudoRandomSequence"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(cm)shared":{"name":"+shared","abstract":"<p>Shared instance seeded with a random number, so it behaves as before adding a seed.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)initWithSeed:":{"name":"-initWithSeed:","abstract":"<p>You can create a private instance seeded with a value you want so you get the same text for the same sequence of calls.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)words":{"name":"-words","abstract":"<p>The set of filler words.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)wordsWithCountInRange:processBlock:":{"name":"-wordsWithCountInRange:processBlock:","abstract":"<p>An array of words with number of words being in the specified range, with the optional block which is called on each word.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)titleCaseStringWithWordCountInRange:":{"name":"-titleCaseStringWithWordCountInRange:","abstract":"<p>A title case string without any punctuation.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)sentenceFragmentWithWordCountInRange:":{"name":"-sentenceFragmentWithWordCountInRange:","abstract":"<p>Undocumented</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)sentenceWithWordCountInRange:":{"name":"-sentenceWithWordCountInRange:","abstract":"<p>A sentence with the word count within the given range.</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)paragraphWithSentenceCountInRange:wordsPerSentenceInRange:":{"name":"-paragraphWithSentenceCountInRange:wordsPerSentenceInRange:","abstract":"<p>Undocumented</p>","parent_name":"MMMHipsum"},"Classes/MMMHipsum.html#/c:objc(cs)MMMHipsum(im)textWithParagraphCountInRange:sentencesPerParagraphInRange:wordsPerSentenceInRange:":{"name":"-textWithParagraphCountInRange:sentencesPerParagraphInRange:wordsPerSentenceInRange:","abstract":"<p>Undocumented</p>","parent_name":"MMMHipsum"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)initWithSeed:":{"name":"-initWithSeed:","abstract":"<p>Undocumented</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)next":{"name":"-next","abstract":"<p>A value from [0; 0xFFFFFFFF] range.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)nextDouble":{"name":"-nextDouble","abstract":"<p>A double value from [0; 1] range.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)nextBool":{"name":"-nextBool","abstract":"<p>A boolean with equal probabilities between <code>true</code> and <code>false</code>.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)nextIntegerFrom:to:":{"name":"-nextIntegerFrom:to:","abstract":"<p>An integer value from the [from; to] range.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)nextDoubleFrom:to:":{"name":"-nextDoubleFrom:to:","abstract":"<p>A double value from the [from; to] range.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)nextRandomElementOfArray:":{"name":"-nextRandomElementOfArray:","abstract":"<p>A random element from the given array.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html#/c:objc(cs)MMMPseudoRandomSequence(im)shuffledArray:":{"name":"-shuffledArray:","abstract":"<p>Shuffled version of the given array using the random numbers from the receiver.</p>","parent_name":"MMMPseudoRandomSequence"},"Classes/MMMPseudoRandomSequence.html":{"name":"MMMPseudoRandomSequence","abstract":"<p>A wrapper for a sequence of randomly looking integers that is convenient to use for testing (so every sequence of"},"Classes/MMMHipsum.html":{"name":"MMMHipsum","abstract":"<p>Very basic helpers for generation of test strings.</p>"},"Classes/PseudoRandomSequence.html":{"name":"PseudoRandomSequence","abstract":"<p>Seedable random number generator conforming to <code>RandomNumberGenerator</code> protocol."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"}}